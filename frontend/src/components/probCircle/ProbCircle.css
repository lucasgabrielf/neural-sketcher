.circle-container {
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* The main container for the circle */
.circle {

    background-color: rgba(0, 0, 0, 0.09);
    /* box-shadow: 0px 4px 25px 1px rgba(0, 0, 0, 0.253); */
    width: 75px;
    height: 75px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;

    position: relative; /* Crucial for positioning the ::before pseudo-element */
    background-color: #e0e0e0; /* The color of the "empty" part of the circle */
    overflow: hidden; /* Hides the part of the fill that goes outside the circle's bounds */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Optional: adds a nice depth */
}

/* The animated fill element */
.circle::before {
    content: ''; /* A pseudo-element must have a content property */
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;

    /* The fill color */
    background-color: #1B618C;

    /* This is the key part! 
        The height is controlled by the '--level' custom property
        we set in the React component's inline style.
        We provide a fallback of 0% in case the variable isn't set.
    */
    height: var(--level, 0%);

    /* This creates the smooth animation. 
        It targets the 'height' property and takes 0.7 seconds
        with an ease-in-out timing function.
    */
    transition: height 0.7s ease-in-out;
}

/* The text inside the circle */
.inside-text {
    color: var(--text);
    align-items: center;
    font-size: larger;
    font-weight: 500;
    margin: 0;
    
    position: relative;
    z-index: 1;

    /* This makes the text color adapt for better readability */
    mix-blend-mode: color-burn;
}

.outside-text {
    font-weight: bold;
}
